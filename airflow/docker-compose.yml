x-airflow-common:
  &airflow-common
  build:
    context: .
    dockerfile: Dockerfile
  env_file:
    - airflow.env
  volumes:
    - ./.google/nasa-neows-c12d19292fad.json:/opt/airflow/.google/nasa-neows-c12d19292fad.json  
    - ./bq_schema:/opt/airflow/bq_schema
    - ./config:/opt/airflow/config
    - ./dags:/opt/airflow/dags
    - ./data:/opt/airflow/data
    - ./logs:/opt/airflow/logs
    - ./pipelines:/opt/airflow/pipelines
    - ./utils:/opt/airflow/utils
    - ./config/secrets.conf:/opt/airflow/config/secrets.conf
  depends_on:
    - postgres
    - redis
  networks:
    - nasa

networks:
  nasa:
    driver: bridge


services:
  postgres:
    image: postgres:12
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: airflow
      POSTGRES_PORT: 5432
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nasa
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.0
    ports:
      - "6379:6379"
    networks:
      - nasa
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  airflow-init:
    <<: *airflow-common
    command: >
      bash -c "airflow db init && 
              airflow db upgrade && 
              airflow users create --username admin --firstname admin --lastname admin --role Admin --email airflow@airflow.com --password admin"
    restart: "no"
    depends_on:
      - postgres
      - redis

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8081:8080"
    networks:
      - nasa

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    networks:
      - nasa

  airflow-worker:
    <<: *airflow-common
    command: celery worker
    networks:
      - nasa

volumes:
  postgres_data:

